name: exam-master Node.js CI

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Make envfile
        uses: ozaytsev86/create-env-file@v1
        with:
          ENV_DATABASE_URL: ${{ secrets.DATABASE_URL }}
          ENV_AWS_CLOUDFRONT_DOMAIN: ${{ secrets.AWS_CLOUDFRONT_DOMAIN }}
          ENV_NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
          ENV_AWS_S3_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          ENV_AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          ENV_AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}
          ENV_AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
          ENV_AWS_CODEDEPLOY_REGION: ${{ secrets.AWS_CODEDEPLOY_REGION }}
          ENV_AWS_CODEDEPLOY_SECRET_ID: ${{ secrets.AWS_CODEDEPLOY_SECRET_ID }}
          ENV_AWS_CODEDEPLOY_SECRET_KEY: ${{ secrets.AWS_CODEDEPLOY_SECRET_KEY }}
          ENV_SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          ENV_NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          ENV_DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          ENV_DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          ENV_SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          ENV_SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          ENV_NEXT_PUBLIC_GTM: ${{ secrets.NEXT_PUBLIC_GTM }}
          ENV_NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          ENV_NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          ENV_GOOGLE_API: ${{ secrets.GOOGLE_API }}
          ENV_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          ENV_GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          ENV_TZ: ${{ secrets.TZ }}

      - name: create .sentryclirc
        run: |
          echo "[auth]" > .sentryclirc
          echo "token=${{ secrets.SENTRY_BUILD_AUTH_TOKEN }}" >> .sentryclirc

      - name: remove ./node_modules
        run: |
          rm -rf ./node_modules

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: push Docker image
        run: |
          export DATABASE_URL=${{ secrets.DATABASE_URL }}
          docker buildx build -t ${{ secrets.DOCKERHUB_USERNAME }}/exam-master --push .

      - name: AWS credentials configure
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_CODEDEPLOY_SECRET_ID }}
          aws-secret-access-key: ${{ secrets.AWS_CODEDEPLOY_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_CODEDEPLOY_REGION }}

      - name: archive core_files ( appspec.yml, scripts )
        run: |
          tar -czvf core_files.tar.gz appspec.yml scripts ./.env

      - name: upload core_files to S3
        run: |
          aws s3 cp core_files.tar.gz s3://exam-master-build/core_files.tar.gz

      - name: AWS CodeDeploy
        run: |
          aws deploy create-deployment --application-name exam-master --deployment-group-name blue-green --description "Deploying exam-master" --s3-location bucket=exam-master-build,bundleType=tar,key=core_files.tar.gz --file-exists-behavior OVERWRITE
