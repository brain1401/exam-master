name: exam-master Node.js CI

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Build
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Make envfile
        uses: ozaytsev86/create-env-file@v1
        with:
          ENV_DATABASE_URL: ${{ secrets.DATABASE_URL }}
          ENV_AWS_CLOUDFRONT_DOMAIN: ${{ secrets.AWS_CLOUDFRONT_DOMAIN }}
          ENV_NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
          ENV_AWS_S3_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          ENV_AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          ENV_AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}
          ENV_AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
          ENV_AWS_CODEDEPLOY_REGION: ${{ secrets.AWS_CODEDEPLOY_REGION }}
          ENV_AWS_CODEDEPLOY_SECRET_ID: ${{ secrets.AWS_CODEDEPLOY_SECRET_ID }}
          ENV_AWS_CODEDEPLOY_SECRET_KEY: ${{ secrets.AWS_CODEDEPLOY_SECRET_KEY }}
          ENV_SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          ENV_NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          ENV_SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          ENV_SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          ENV_NEXT_PUBLIC_GTM: ${{ secrets.NEXT_PUBLIC_GTM }}
          ENV_NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          ENV_NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          ENV_GOOGLE_API: ${{ secrets.GOOGLE_API }}
          ENV_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          ENV_GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: "Build project"
        run: |
          npm install
          npm run build
          rm -r node_modules

      - name: archive
        run: |
          tar -czvf exam-master.tar.gz ./ --exclude=exam-master.tar.gz

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_CODEDEPLOY_REGION }}

      - name: Upload to S3
        run: |
          aws s3 cp ./exam-master.tar.gz s3://exam-master-build/deploy/

      - name: AWS CodeDeploy
        run: |
          aws deploy create-deployment --application-name exam-master --s3-location bucket=exam-master-build,bundleType=tgz,key=deploy/exam-master.tar.gz --deployment-group-name Deploy --description "Deploying exam-master" --file-exists-behavior OVERWRITE
